# APC는 왜 서브태스크 대회가 되었을까? (https://www.acmicpc.net/problem/17224) 풀이 (7/1)

# 2019년 올해도 어김없이 아주대학교 프로그래밍 경시대회(Ajou Programming Contest, APC)가 열렸다! 올해 새롭게 APC의 총감독을 맡게 된 준표는 대회 출제 과정 중 큰 고민에 빠졌다. APC에 참가하는 참가자들이 너무 다양해 대회 문제 난이도 설정이 너무 어렵기 때문이다.
# ...
# 욕심 그득한 준표는 고민끝에 이 수많은 니즈를 충족시키기 위한 한가지 해결책을 제안했다. 하나의 문제를 제한조건을 통해 쉬운 버전과 어려운 버전으로 나누어 쉬운 버전만 맞더라도 부분점수를 주는 서브태스크 문제로 대회를 구성하는 것이다. 또한 이렇게 만들어진 문제를 쉬운 버전의 난이도순으로 배치하려 한다.
# ...
# 현정이는 L 만큼의 역량을 가지고 있어 L보다 작거나 같은 난이도의 문제를 풀 수 있다. 또한 현정이는 코딩이 느리기 때문에 대회 시간이 부족해 K개보다 많은 문제는 해결할 수 없다. 어떤 문제에 대해 쉬운 버전을 해결한다면 100점을 얻고, 어려운 버전을 해결한다면 여기에 40점을 더 받아 140점을 얻게 된다. 어려운 버전을 해결하면 쉬운 버전도 같이 풀리게 되므로, 한 문제를 해결한 것으로 계산한다.
# 현정이가 APC에 참가했다면 최대 몇점을 얻을 수 있었을지 알려주자.

# N=문제 수, L=역량, K=풀 수 있는 최대 문제 수
N, L, K = map(int, input().split())

sub1 = list()
sub2 = list()

for i in range(N):
    a, b = map(int, input().split())
    if b > L:
        if a <= L:
            sub1.append(a)
    elif b <= L:
        sub2.append(b)

score = min(K, len(sub2)) * 140
if K > len(sub2):
    score += min((K-len(sub2)), len(sub1)) * 100

print(score)